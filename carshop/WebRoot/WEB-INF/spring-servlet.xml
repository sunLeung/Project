<?xml version="1.0" encoding="UTF-8"?>
<!--beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd"-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
   	http://www.springframework.org/schema/mvc
   	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
	<!-- 把标记了@Controller注解的类转换为bean -->
	<context:component-scan base-package="com.car.controller" />
	<context:component-scan base-package="com.car.service" />
	<context:component-scan base-package="com.car.dao" />

	<!--mvc:annotation-driven/-->
	<!-- 
		配置了<mvc:annotation-driven/>
		这个配置声明
		{没有 defaultAnnotationHandlerMapping这个属性，
		对于@ResultMapping标签的解析,用 "org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping” 这个类来处理.}
		所以要去掉<mvc:annotation-driven />,去掉其默认配置，
		否则会实例化两个DefaultAnnotationHandlerMapping，并且不使用你配置的那个 DefaultAnnotationHandlerMapping.
		org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter与<mvc:annotation-driven />关系与上同理. 
	-->
	<!--bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="test.BeanInterceptor" />
			</list>
		</property>
	</bean-->
	
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!--ref bean="mappingJacksonHttpMessageConverter" /-->
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!--bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean-->
	
	<!-- spring mvc返回json防止出现NULL  -->
	<!--bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
	    factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />
	<bean
	    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetObject" ref="jacksonSerializationConfig" />
	    <property name="targetMethod" value="setSerializationInclusion" />
	    <property name="arguments">
	        <list>
	            <value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_DEFAULT</value>
	        </list>
	    </property>
	</bean-->
	

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	
	<!-- 处理Mutipart文件上次的bean -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" >
		<!-- one of the properties available; the maximum file size in bytes -->  
        <property name="maxUploadSize" value="40000000" />  
	</bean>
		
		
    
    <!--mvc:annotation-driven/>
    <bean id="messageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
         <property name="messageConverters"> 
             <list> 
                 <bean  class="org.springframework.http.converter.StringHttpMessageConverter"> 
                     <property name="supportedMediaTypes"> 
                         <list> 
                             <value>text/html;charset=UTF-8</value> 
                         </list> 
                     </property> 
                 </bean> 
                 <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />   
             </list> 
         </property> 
     </bean-->   
	
	<!--bean class ="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
    	<property name="messageConverters">  
  			<list>  
   				<ref bean="mappingJacksonHttpMessageConverter" /><!-d- json转换器 -d->  
  			</list>  
 		</property>  
	</bean>     
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" /-->
	
	<!-- 将静态资源转到Web容器的Servlet处理 -->
	<!--mvc:resources mapping="/**" location="/" /-->
</beans>